{
	"freezed": {
		"prefix": "fu-freezed",
		"body": [
			"import 'package:freezed_annotation/freezed_annotation.dart';",
			"",
			"part '$TM_FILENAME_BASE.freezed.dart';",
			"",
			"@freezed",
			"abstract class $1 with _$$1 {",
			"   factory $1($2) = _$1;",
			"}"
		],
		"description": "Freezed snippet"
	},
	"freezed_json_serializable": {
		"prefix": "fu-freezed_json_serializable",
		"body": [
			"import 'package:freezed_annotation/freezed_annotation.dart';",
			"",
			"part '$TM_FILENAME_BASE.freezed.dart';",
			"part '$TM_FILENAME_BASE.g.dart';",
			"",
			"@freezed",
			"abstract class $1 with _$$1 {",
			"   factory $1($2) = _$1;",
			"   factory $1.fromJson(Map<String, dynamic> json) => _$$1FromJson(json);",
			"}"
		],
		"description": "Freezed snippet with jsonSerializable"
	},
	"interface": {
		"prefix": "fu-interface",
		"body": [
			"abstract class I$1 {",
			"}"
		],
		"description": "Freezed snippet with jsonSerializable"
	},
	"class_interface": {
		"prefix": "fu-class_interface",
		"body": [
			"class $1 implements I$1 {",
			"}"
		],
		"description": "Freezed snippet with jsonSerializable"
	},
	"dart_test_init": {
		"prefix": "fu-test_init",
		"body": [
			"import 'package:test/test.dart';",
			"",
			"void main() {",
			"",
			"  setUp((){});",
			"",
			"  test('$1', () async {});",
			"",
			"}"
		],
		"description": "Test Dart Init"
	},
	"dart_callable_class": {
		"prefix": "fu-callable-class",
		"body": [
			"",
			"class $1 {",
			"  $2 call($3) {}",
			"}"
		],
		"description": "Test Dart Init"
	},
	"dart_class_equatable": {
		"prefix": "fu-class-equatable",
		"body": [
			"import 'package:equatable/equatable.dart';",
			"",
			"class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} extends Equatable {",
			"",
			"  @override",
			"  List<Object> get props => [];",
			"}"
		]
	},
	"dart_class": {
		"prefix": "fu-class",
		"body": [
			"",
			"class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} {",
			"  $2",
			"}"
		]
	}
}